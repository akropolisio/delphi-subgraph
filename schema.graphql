###############
### SAVINGS ###
###############

type SavingsPool @entity {
  "address"
  id: ID!
  poolToken: PoolToken!
  tokens: [Token!]!
  rewardTokens: [Token!]!
  apr: SPoolApr!
  prevBalance: SPoolBalance!
  balance: SPoolBalance!
  lastRewardDistributionDate: BigInt!
  prevRewardDistributionDate: BigInt!

  rewards: [SReward!]! @derivedFrom(field: "pool")
  aprHistory: [SPoolApr!]! @derivedFrom(field: "pool")
  balanceHistory: [SPoolBalance!]! @derivedFrom(field: "pool")
  users: [User!]! @derivedFrom(field: "savingsPools")
  distributions: [SPoolYieldDistribution!]! @derivedFrom(field: "pool")
}

type SReward @entity {
  id: ID!
  pool: SavingsPool!
  duration: BigInt!
  poolBalance: SPoolBalance!
  token: Token!
  amount: BigInt!
  date: BigInt!
}

type SPoolApr @entity {
  id: ID!
  amount: BigInt!
  date: BigInt!
  duration: BigInt!
  pool: SavingsPool!
  txHash: Bytes!
}

type SPoolBalance @entity {
  id: ID!
  amount: BigInt!
  date: BigInt!
  pool: SavingsPool!
}

type SPoolYieldDistribution @entity {
  id: ID!
  pool: SavingsPool!
  amount: BigInt!
}

########################
### VAULT SAVINGS V1 ###
########################

type VaultPoolV1 @entity {
  "address"
  id: ID!
  isActive: Boolean!
  poolToken: PoolToken!
  underlyingToken: Token!
  controller: VaultControllerV1!
  strategy: VaultStrategyV1!
  totalTVL: BigInt!

  users: [User!]! @derivedFrom(field: "vaultPoolsV1")
}

type VaultStrategyV1 @entity {
  "address"
  id: ID!
  withdrawFee: BigInt!
  withdrawFeeDenominator: BigInt!
}

type VaultControllerV1 @entity {
  "address"
  id: ID!
  vaults: [VaultPoolV1!]! @derivedFrom(field: "controller")
}

########################
### VAULT SAVINGS V2 ###
########################

type VaultPoolV2 @entity {
  "address"
  id: ID!
  isActive: Boolean!
  poolToken: PoolToken!
  underlyingToken: Token!

  users: [User!]! @derivedFrom(field: "vaultPoolsV2")
}

############
### USER ###
############

type User @entity {
  "address"
  id: ID!
  active: Boolean!

  savingsPools: [SavingsPool!]!
  stakingPools: [String!]!
  vaultPoolsV1: [VaultPoolV1!]!
  vaultPoolsV2: [VaultPoolV2!]!

  visitedVaultPoolsV1: [VaultPoolV1!]!
  visitedVaultPoolsV2: [VaultPoolV2!]!
}

################
### BALANCES ###
################

enum Module {
  savings
  staking
  vaultsV1
  vaultsV2
}

type UserBalance @entity {
  "user address + pool address"
  id: ID!
  value: BigInt!
  user: User!
  pool: Bytes!
  "savings | staking | vaultsV1 | vaultsV2"
  module: Module!
}

#############
### OTHER ###
#############

type Token @entity {
  "address"
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

type PoolToken @entity {
  "address"
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
  savingsPool: SavingsPool
  vaultPoolV1: VaultPoolV1
  vaultPoolV2: VaultPoolV2
}

type GlobalStat @entity {
  id: ID!
  activeMembersCount: Int!
  totalYieldEarned: BigInt!
}

type SubgraphConfig @entity {
  id: ID!
  aprDecimals: Int!
}

enum SingleEntityID {
  ID
}
